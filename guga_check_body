(function () {
  'use strict';

  if (!$response) {
    console.log('❌ $response 未定义');
    $done({});
    return;
  }

  let bodyText = '';

  try {
    if (typeof $response.body === 'string') {
      // 最正常的情况
      bodyText = $response.body;
      console.log('✅ $response.body 是 string, 长度:', bodyText.length);
    } else if ($response.body) {
      // 不是 string，可能是 NSData/ArrayBuffer，尝试转 base64
      bodyText = $response.body.toString();
      console.log('⚠️ $response.body 不是 string，已强制转 toString(), 长度:', bodyText.length);
    } else if ($response.rawBody) {
      // 有些版本提供 rawBody (base64)
      let raw = $response.rawBody;
      console.log('info: $response.rawBody 存在, 长度:', raw.length);
      try {
        bodyText = Buffer.from(raw, 'base64').toString('utf-8');
        console.log('✅ 已从 rawBody(base64) 解码成 utf-8, 长度:', bodyText.length);
      } catch (e) {
        console.log('❌ rawBody 解码失败:', e.message);
      }
    }
  } catch (err) {
    console.log('❌ 处理 body 出错:', err.message);
  }

  if (bodyText) {
    try {
      let obj = JSON.parse(bodyText);
      console.log('解析成功, code=', obj.code, ' level=', obj.data && obj.data.level);

      if (obj.code === 200 && obj.data) {
        obj.data.level = 1;
        obj.data.trialDate = obj.data.trialDate || Math.floor(Date.now() / 1000);
        console.log('✨ 修改后 level:', obj.data.level);
        $done({ body: JSON.stringify(obj) });
        return;
      }
    } catch (e) {
      console.log('⚠️ JSON.parse 出错:', e.message);
    }
  } else {
    console.log('⚠️ bodyText 为空');
  }

  $done({ body: bodyText || $response.body || '{}' });
})();
