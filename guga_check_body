(function () {
  'use strict';

  if (!$response) {
    console.log('❌ $response 未定义');
    $done({});
    return;
  }

  let bodyText = '';

  try {
    if ($response.body && typeof $response.body === 'string' && $response.body.length > 0) {
      bodyText = $response.body;
      console.log('✅ 直接使用 $response.body, 长度:', bodyText.length);
    } else if ($response.rawBody) {
      console.log('⚠️ $response.body 为空, 尝试解码 $response.rawBody');
      try {
        let b64 = $response.rawBody;
        let bin = atob(b64);
        let arr = new Uint8Array(bin.length);
        for (let i = 0; i < bin.length; i++) arr[i] = bin.charCodeAt(i);
        bodyText = new TextDecoder('utf-8').decode(arr);
        console.log('✅ 已从 rawBody(base64) 解码, 长度:', bodyText.length);
      } catch (e) {
        console.log('❌ rawBody 解码失败:', e.message);
      }
    } else {
      console.log('⚠️ 无法获取 body');
    }
  } catch (err) {
    console.log('❌ 处理 body 出错:', err.message);
  }

  if (bodyText) {
    try {
      let obj = JSON.parse(bodyText);
      console.log('解析成功, code=', obj.code, ' level=', obj.data && obj.data.level);

      if (obj.code === 200 && obj.data) {
        obj.data.level = 1;
        obj.data.trialDate = obj.data.trialDate || Math.floor(Date.now() / 1000);
        console.log('✨ 修改后 level:', obj.data.level);
        $done({ body: JSON.stringify(obj) });
        return;
      }
    } catch (e) {
      console.log('❌ JSON.parse 出错:', e.message);
    }
  }

  // 如果仍然失败，返回原始 body（避免客户端报错）
  $done({ body: bodyText || '{}' });
})();
